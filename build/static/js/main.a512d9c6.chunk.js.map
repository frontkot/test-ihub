{"version":3,"sources":["pages/Page404/Page404.js","store/all-items/selectors.js","store/all-items/actionTypes.js","store/all-items/actions.js","firebase.config.js","store/all-items/operations.js","components/ActionButton/ActionButton.js","components/TabItem/TabItem.js","pages/SpecialistsContent/SpecialistsContent.js","pages/SpecialistsTab/SpecialistsTab.js","pages/AddSpecialist/utils.js","pages/AddSpecialist/AddSpecialist.js","pages/Analitycs/AnalitycsItem.js","pages/Analitycs/Analitycs.js","routes/AppRoutes/AppRoutes.js","components/Header/Header.js","components/Loader/Loader.js","App.js","reportWebVitals.js","store/all-items/reducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["Page404","history","className","onClick","goBack","to","getAllItems","state","allItems","data","allItemsLoading","isLoading","ALL_ITEMS_LOADING","LOAD_ALL_ITEMS","ADD_NEW_ITEM","TOGGLE_ITEM","type","payload","addNewItemToStore","newItem","toggleItemInStore","id","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","toggleItem","dispatch","a","collection","doc","name","update","addNewItem","set","ActionButton","isFavourite","isDisfavourite","textContent","useDispatch","item","useSelector","find","e","itemIsFavourite","itemIsDisfavourite","toggle","undefined","TabItem","email","specialty","defaultProps","article","SpecialistsContent","arrForRender","items","filterOptions","label","value","useState","filterFeature","setFilterFeature","filter","renderItems","map","index","options","defaultValue","onChange","option","length","SpecialistsTab","tabArr","content","renderContent","validationSchema","yup","shape","required","min","max","specialtyOptions","AddSpecialist","selectValue","setSelectValue","handleSubmit","split","join","initialValues","onSubmit","values","resetForm","errors","touched","setFieldValue","placeholder","AnalitycsItem","title","result","Analitycs","totalPsychologist","totalPsychotherapist","totalPsychiatrist","totalFav","totalDisfav","AppRoutes","exact","path","component","routeProps","headerItems","counter","Header","favNum","disfavNum","classNameCounter","navLinkItems","activeStyle","color","Loader","App","useEffect","get","res","docs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","newData","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a512d9c6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './Page404.scss';\n\nconst Page404 = ({\n    history\n}) => {\n  return (\n      <div className='page-404'>\n          <h2>404</h2>\n          <h3>Page not found</h3>\n          <div className='button-block'>\n            <Link className='page404-button' onClick={history.goBack}>Go back</Link>\n            <Link className='page404-button' to={'/'}>Go to the home page</Link>\n          </div>\n      </div>\n  );\n}\n\nexport default Page404;","export const getAllItems = (state) => state.allItems.data;\nexport const allItemsLoading = (state) => state.allItems.isLoading;","export const ALL_ITEMS_LOADING = 'ALL_ITEMS_LOADING';\nexport const LOAD_ALL_ITEMS = 'LOAD_ALL_ITEMS';\nexport const ADD_NEW_ITEM = 'ADD_NEW_ITEM';\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';","import { ALL_ITEMS_LOADING, LOAD_ALL_ITEMS, ADD_NEW_ITEM, TOGGLE_ITEM } from './actionTypes';\n\nexport const allItemsLoading = (isLoading) => ({\n  type: ALL_ITEMS_LOADING, \n  payload: isLoading\n})\n\nexport const saveAllItemsToStore = (items) => ({\n  type: LOAD_ALL_ITEMS, \n  payload: items\n})\n\nexport const addNewItemToStore = (newItem) => ({\n  type: ADD_NEW_ITEM,\n  payload: newItem\n})\n\nexport const toggleItemInStore = (newItem, id) => ({\n  type: TOGGLE_ITEM,\n  payload: {newItem: newItem, id: id}\n})","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBYIWdex_YmrGYP20rQGyzEX87MDXyw3ko\",\n  authDomain: \"test-ihub.firebaseapp.com\",\n  projectId: \"test-ihub\",\n  storageBucket: \"test-ihub.appspot.com\",\n  messagingSenderId: \"279374863024\",\n  appId: \"1:279374863024:web:f3e392561b4d04ec5cf975\"\n};\n  \nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nexport default db;","import { saveAllItemsToStore, allItemsLoading, toggleItemInStore, addNewItemToStore } from './actions';\n\nimport db from '../../firebase.config';\n\nexport const loadItems = () => async (dispatch) => {\n    dispatch(allItemsLoading(true))\n    const res = await db.collection('specialists').get();\n    dispatch(saveAllItemsToStore(res.docs.map(doc => doc.data()))) // save all items in store\n    dispatch(allItemsLoading(false))\n}\n\nexport const toggleItem = (newItem) => async (dispatch) => {\n    dispatch(toggleItemInStore(newItem, newItem.id)) // toggle fav and disfav on store\n    await db.collection('specialists').doc(newItem.name).update(newItem); // toggle fav and disfav on DB\n}\n\nexport const addNewItem = (newItem) => async (dispatch) => {\n    dispatch(addNewItemToStore(newItem)); // add new specialist to store\n    await db.collection('specialists').doc(newItem.name).set(newItem); // add new specialist to DB\n}","import React from 'react';\nimport './ActionButton.scss'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllItems } from '../../store/all-items/selectors';\nimport { toggleItem } from '../../store/all-items/operations';\n\nconst ActionButton = ({\n  isFavourite, isDisfavourite, textContent, id\n}) => {\n  const dispatch = useDispatch();\n  const allItems = useSelector(getAllItems);\n  const item = allItems.find(e => e.id === id);\n  let itemIsFavourite = item.isFavourite;\n  let itemIsDisfavourite = item.isDisfavourite;\n  \n  const toggle = async () => {\n    if (isFavourite !== undefined) {\n      itemIsFavourite = !itemIsFavourite;\n      if(itemIsDisfavourite) {\n        itemIsDisfavourite = !itemIsDisfavourite;\n      }\n    } else {\n      itemIsDisfavourite = !itemIsDisfavourite;\n      if(itemIsFavourite) {\n        itemIsFavourite = !itemIsFavourite\n      }\n    }\n    \n    const newItem = {...item, isFavourite: itemIsFavourite, isDisfavourite: itemIsDisfavourite};\n    dispatch(toggleItem(newItem))\n  }\n  return (\n    <button \n      className={isFavourite || isDisfavourite ? 'active__button' : 'non-active__button'}\n      onClick={toggle}\n    >\n      {textContent}\n    </button>\n  );\n};\n\nexport default ActionButton;","import React from 'react';\nimport './TabItem.scss';\nimport PropTypes from 'prop-types';\nimport ActionButton from '../ActionButton/ActionButton';\n\nconst TabItem = ({\n  name, email, isFavourite, isDisfavourite, specialty, id\n}) => {\n  \n  return (\n    <li className='tab__item'>\n      <h3 className='tab__header'>{name}</h3>\n      <p className='tab__par'>Specialty: {specialty}</p>\n      <p className='tab__par'>Email: {email}</p>\n      <div className='tab__button--container'>\n        <ActionButton\n          id={id}\n          isFavourite={isFavourite}\n          textContent='Favourites'\n        />\n        <ActionButton\n          id={id}\n          isDisfavourite={isDisfavourite}\n          textContent='Disfavourites'\n        />\n      </div>\n    </li>\n  );\n};\n\nexport default TabItem;\n\nTabItem.propTypes = {\n    className: PropTypes.string, \n    name: PropTypes.string,\n    email: PropTypes.string,\n    article: PropTypes.string,\n};\n\nTabItem.defaultProps = {\n    className: '', \n    name: '',\n    email: '',\n    article: '',\n};","import React, { useState } from 'react';\nimport TabItem from '../../components/TabItem/TabItem';\nimport Select from \"react-select\";\nimport './SpecialistsContent.scss';\n\nconst SpecialistsContent = ({\n  items\n}) => {\n  const filterOptions = [\n    {label: 'All specialists', value: 'all'},\n    {label: 'Psychologists', value: 'psychologist'},\n    {label: 'Psychotherapists', value: 'psychotherapist'},\n    {label: 'Psychiatrists', value: 'psychiatrist'},\n  ];\n  \n  const [filterFeature, setFilterFeature] = useState(filterOptions[0]);\n  let arrForRender;\n\n  switch (filterFeature.value) {\n    case filterOptions[1].value:\n      arrForRender = items.filter(e => e.specialty === filterOptions[1].value); // When choose 'Psychologists' \n      break;\n    case filterOptions[2].value:\n      arrForRender = items.filter(e => e.specialty === filterOptions[2].value); // When choose 'Psychotherapists' \n      break\n    case filterOptions[3].value:\n      arrForRender = items.filter(e => e.specialty === filterOptions[3].value); // When choose 'Psychiatrists' \n      break\n    default:\n      arrForRender = items; // When choose 'All specialists' \n      break;\n  }\n\n  const renderItems = arrForRender.map((e, index) =>\n  <TabItem\n    key={index}\n    name={e.name}\n    email={e.email}\n    isFavourite={e.isFavourite}\n    isDisfavourite={e.isDisfavourite}\n    specialty={e.specialty}\n    id={e.id}\n  />\n)\n\n  return (\n    <>\n      <div className='specialists__select'>\n        <h3 className='specialists__select--title'>Choose the required specialty</h3>\n        <Select\n          type='text'\n          options={filterOptions}\n          defaultValue={filterFeature}\n          className='specialists__select--field'\n          onChange={option => setFilterFeature(option)}\n        />\n      </div>\n      {\n        renderItems.length ? \n            <ul className='specialists__content'>\n              {renderItems}\n            </ul>\n          :\n            <h3 className='specialists__empty'>Unfortunately, there are no such specialists.</h3> // render if there are no specialists of this category\n      }\n\n    </>\n  );\n};\n\nexport default SpecialistsContent;","import React from 'react';\nimport './SpecialistsTab.scss';\nimport { useSelector } from 'react-redux';\nimport { getAllItems } from '../../store/all-items/selectors';\nimport SpecialistsContent from '../SpecialistsContent/SpecialistsContent';\nimport { Link } from 'react-router-dom';\n\nconst SpecialistsTab = ({\n  content\n}) => {\n  const items = useSelector(getAllItems);\n  let tabArr;\n\n  // content selection depending on the desired tab\n  switch (content) {\n    case 'favourites':\n      tabArr = items.filter(e => e.isFavourite);\n      break;\n    case 'disfavourites':\n      tabArr = items.filter(e => e.isDisfavourite);\n      break;\n    default:\n      tabArr = items;\n      break;\n  }\n\n  const renderContent = tabArr.length ? \n          <SpecialistsContent items={tabArr}/>\n        : // render if there are no items\n          <> \n            <h2 className='none-items__header'>At the moment there are no specialists</h2>\n            <Link className='none-items__link' to={'/add-specialist'}>Add a new specialist</Link>\n          </>\n\n  return (\n    <div className='tab__container'>\n        {renderContent}\n    </div>\n  );\n};\n\nexport default SpecialistsTab;","import * as yup from \"yup\";\n\nexport const validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Required')\n    .min(2, \"The name is too short!\")\n    .max(50, \"The name is too long!\"),\n  email: yup\n    .string()\n    .email('Invalid email')\n    .required('Required'),\n  specialty: yup\n    .string()\n    .required('Required') \n})\n\nexport const specialtyOptions = [\n  {value: 'psychologist', label: 'Psychologist'},\n  {value: 'psychotherapist', label: 'Psychotherapist'},\n  {value: 'psychiatrist', label: 'Psychiatrist'},    \n];","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport Select from \"react-select\";\nimport { useDispatch } from 'react-redux';\nimport { addNewItem } from '../../store/all-items/operations';\nimport { validationSchema, specialtyOptions } from './utils';\nimport './AddSpecialist.scss';\n\nconst AddSpecialist = () => {\n  const dispatch = useDispatch();\n  const [selectValue, setSelectValue] = useState(null)\n\n  const handleSubmit = async (item) => {\n    const newItem = { \n        ...item, // distructure obj\n        isFavourite: false, // add default isFavourite\n        isDisfavourite: false, // add default isDisfavourite\n        id: `${item.name.split(' ').join('')}-${item.specialty}` // add custom id\n      }\n\n    dispatch(addNewItem(newItem)) // add new item to store and to DB\n    setSelectValue(null); // reset select\n  }\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', specialty: null }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { resetForm }) => {\n        handleSubmit(values);\n        resetForm(); // reset form\n      }}\n    >\n      {({ errors, touched, setFieldValue, values }) => (\n        <Form className='add-form__container'>\n          <label className='add-form__label'>Specialist name</label>\n          <Field \n            type='text'\n            name='name'\n            placeholder='Add specialist name'\n            className='add-form__input'\n          />\n          {errors.name && touched.name ? (\n            <div className='add-form__error'>{errors.name}</div>\n          ) : null}\n\n          <label className='add-form__label'>Specialty</label>\n          <Select\n            name='specialty'\n            options={specialtyOptions}\n            placeholder='Choose specialty'\n            value={selectValue}\n            className='add-form__select'\n            onChange={option => {\n              setSelectValue({label: specialtyOptions.find(e => e.value === option.value).label, value: option.value}) // set selected value to state \n              setFieldValue('specialty', option.value) // set selected value to field\n            }}\n          />\n          {errors.specialty && touched.specialty ? (\n            <div className='add-form__error'>{errors.specialty}</div>\n          ) : null}\n\n          <label className='add-form__label'>Specialist email</label>\n          <Field \n            type='email'\n            name='email'\n            placeholder='Add specialist email'\n            label='Specialist email'\n            className='add-form__input'\n          />\n          {errors.email && touched.email ? (\n            <div className='add-form__error'>{errors.email}</div>\n          ) : null}\n          \n          <Field \n            type='submit'\n            name='submit'\n            value='Add new specialist to DB'\n            className='add-form__submit'\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddSpecialist;","import React from 'react';\n\nconst AnalitycsItem = ({\n  title, result\n}) => (\n  <div className='analityc__item'>\n    <p className='analityc__title'>{title}</p>\n    <p className='analityc__result'>{result}</p>\n  </div>\n);\n\nexport default AnalitycsItem;","import React from 'react';\nimport './Analitycs.scss';\nimport { useSelector } from 'react-redux';\nimport { getAllItems } from '../../store/all-items/selectors';\nimport AnalitycItem from './AnalitycsItem';\n\nconst Analitycs = () => {\n  const allItems = useSelector(getAllItems);\n  const totalPsychologist = allItems.filter(e => e.specialty === 'psychologist');\n  const totalPsychotherapist = allItems.filter(e => e.specialty === 'psychotherapist');\n  const totalPsychiatrist = allItems.filter(e => e.specialty === 'psychiatrist');\n  const totalFav = allItems.filter(e => e.isFavourite);\n  const totalDisfav = allItems.filter(e => e.isDisfavourite);\n\n  return (\n    <div className='analityc__container'>\n      <h2 className='analityc__header'>Analitycs</h2>\n      <div className='analityc__content'>\n        <AnalitycItem title='Total specialists' result={allItems.length} />\n        <AnalitycItem title='Total psychologist' result={totalPsychologist.length} />\n        <AnalitycItem title='Total psychotherapist' result={totalPsychotherapist.length} />\n        <AnalitycItem title='Total psychiatrist' result={totalPsychiatrist.length} />\n        <AnalitycItem title='Total favourites' result={totalFav.length} />\n        <AnalitycItem title='Total disfavourites' result={totalDisfav.length} />\n      </div>\n    </div>\n  );\n};\n\nexport default Analitycs;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Page404 from '../../pages/Page404/Page404';\nimport SpecialistsTab from '../../pages/SpecialistsTab/SpecialistsTab';\nimport AddSpecialist from '../../pages/AddSpecialist/AddSpecialist';\nimport Analitycs from '../../pages/Analitycs/Analitycs';\n\nconst AppRoutes = () => (\n    <Switch>\n        <Route exact path='/' component={() => <SpecialistsTab content='all' />} />\n        <Route path='/favourites' exact component={() => <SpecialistsTab content='favourites' />} />\n        <Route exact path='/disfavourites' component={() => <SpecialistsTab content='disfavourites' />} />\n        <Route exact path='/add-specialist' component={AddSpecialist} />\n        <Route exact path='/analitycs' component={Analitycs} />\n\n        <Route path='*' component={(routeProps) => <Page404 {...routeProps}/>} />\n    </Switch>\n);\n\nexport default AppRoutes;\n","import React from 'react';\nimport './Header.scss';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAllItems } from '../../store/all-items/selectors';\n\nconst headerItems = [\n  {path: '/', textContent: 'All Specialists'},\n  {path: '/favourites', textContent: 'Favorites Specialists', counter: true},\n  {path: '/disfavourites', textContent: 'Disfavourites Specialists', counter: true},\n  {path: '/add-specialist', textContent: 'Add Specialist'},\n  {path: '/analitycs', textContent: 'Analytics'},\n]\n\nconst Header = () => {\n  const items = useSelector(getAllItems);\n  const favNum = items.filter(e => e.isFavourite).length;\n  const disfavNum = items.filter(e => e.isDisfavourite).length;\n  const classNameNavLink = 'header__item';\n  const classNameCounter = 'header__counter';\n\n  const navLinkItems = headerItems.map((e, index) => (\n    <NavLink \n        key={index}\n        exact to={e.path}\n        activeStyle={{color: 'coral'}} \n        className={classNameNavLink}\n    >\n        {e.textContent}\n        {e.counter &&\n          e.path === '/favourites' ?\n            favNum > 0 && <span className={classNameCounter}>{favNum}</span>\n          :\n            e.path === '/disfavourites' ? \n              disfavNum > 0 && <span className={classNameCounter}>{disfavNum}</span>\n            : null\n        }\n    </NavLink>\n  ))\n\n  return (\n    <div className='header__bg'>\n      <div className='header__container'>\n        <nav className='header__content'>\n          {navLinkItems}\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => (\n  <div className='loader-window'>\n    <div className='loader'>\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import './App.scss';\nimport AppRoutes from './routes/AppRoutes/AppRoutes';\nimport Header from './components/Header/Header';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadItems } from './store/all-items/operations';\nimport { allItemsLoading } from './store/all-items/selectors';\nimport Loader from './components/Loader/Loader';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(allItemsLoading);\n\n  useEffect(() => {\n    dispatch(loadItems())\n  }, [dispatch])\n\n  if(isLoading) {\n    return <Loader />\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <AppRoutes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LOAD_ALL_ITEMS, ALL_ITEMS_LOADING, ADD_NEW_ITEM, TOGGLE_ITEM } from './actionTypes';\n\nconst initialState = {\n  isLoading: false,\n  data: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_ALL_ITEMS:\n      return { ...state, data: action.payload };\n    case ALL_ITEMS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ADD_NEW_ITEM:\n      return { ...state, data: [...state.data, action.payload] };\n    case TOGGLE_ITEM:\n      const { newItem, id } = action.payload;\n      const newData = state.data.map(e => e.id === id ? newItem : e);\n      return { ...state, data: newData };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport allItems from './all-items/reducer';\n\nconst reducer = combineReducers({\n  allItems,\n});\n\nexport default reducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}